// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Stride Shader Mixin Code Generator.
// To generate it yourself, please install Stride.VisualStudio.Package .vsix
// and re-save the associated .sdfx.
// </auto-generated>

using System;
using Stride.Core;
using Stride.Rendering;
using Stride.Graphics;
using Stride.Shaders;
using Stride.Core.Mathematics;
using Buffer = Stride.Graphics.Buffer;

namespace VL.Stride.Rendering.PostFX
{
    [DataContract]public partial class CustomColorTransformKeys : ShaderMixinParameters
    {
        public static readonly PermutationParameterKey<ShaderSource> InputGraph = ParameterKeys.NewPermutation<ShaderSource>();
    };
    internal static partial class ShaderMixins
    {
        internal partial class CustomColorTransform  : IShaderMixinBuilder
        {
            public void Generate(ShaderMixinSource mixin, ShaderMixinContext context)
            {
                context.Mixin(mixin, "CustomColorTransformShader");

                {
                    var __mixinToCompose__ = context.GetParam(CustomColorTransformKeys.InputGraph);
                    var __subMixin = new ShaderMixinSource();
                    context.PushComposition(mixin, "InputGraph", __subMixin);
                    context.Mixin(__subMixin, __mixinToCompose__);
                    context.PopComposition();
                }
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("CustomColorTransform", new CustomColorTransform());
            }
        }
    }
}
